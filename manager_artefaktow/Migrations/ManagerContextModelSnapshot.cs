// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using manager_artefaktow.Data;

namespace manager_artefaktow.Migrations
{
    [DbContext(typeof(ManagerContext))]
    partial class ManagerContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("manager_artefaktow.Data.Models.Permition", b =>
                {
                    b.Property<int>("PermitionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("PermitionName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PermitionId");

                    b.ToTable("Permitions");
                });

            modelBuilder.Entity("manager_artefaktow.Data.Models.Role", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("RoleName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RoleId");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("manager_artefaktow.Data.Models.RolePermition", b =>
                {
                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<int>("PermitionId")
                        .HasColumnType("int");

                    b.HasKey("RoleId", "PermitionId");

                    b.HasIndex("PermitionId");

                    b.ToTable("RolePermitions");
                });

            modelBuilder.Entity("manager_artefaktow.Data.Models.User", b =>
                {
                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserName");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("manager_artefaktow.Data.Models.UserRole", b =>
                {
                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<string>("UserName1")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserName", "RoleId");

                    b.HasIndex("RoleId");

                    b.HasIndex("UserName1");

                    b.ToTable("UserRoles");
                });

            modelBuilder.Entity("manager_artefaktow.Data.Models.RolePermition", b =>
                {
                    b.HasOne("manager_artefaktow.Data.Models.Permition", null)
                        .WithMany("Roles")
                        .HasForeignKey("PermitionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("manager_artefaktow.Data.Models.Role", null)
                        .WithMany("Permitions")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("manager_artefaktow.Data.Models.UserRole", b =>
                {
                    b.HasOne("manager_artefaktow.Data.Models.Role", null)
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("manager_artefaktow.Data.Models.User", null)
                        .WithMany("Roles")
                        .HasForeignKey("UserName1");
                });
#pragma warning restore 612, 618
        }
    }
}
