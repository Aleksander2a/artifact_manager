<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="ArtifactManagerDatabaseDataSet" targetNamespace="http://tempuri.org/ArtifactManagerDatabaseDataSet.xsd" xmlns:mstns="http://tempuri.org/ArtifactManagerDatabaseDataSet.xsd" xmlns="http://tempuri.org/ArtifactManagerDatabaseDataSet.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="ArtifactManagerDatabaseConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="ArtifactManagerDatabaseConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.manager_artefaktow.Properties.Settings.GlobalReference.Default.ArtifactManagerDatabaseConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="__EFMigrationsHistoryTableAdapter" GeneratorDataComponentClassName="__EFMigrationsHistoryTableAdapter" Name="__EFMigrationsHistory" UserDataComponentName="__EFMigrationsHistoryTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="ArtifactManagerDatabaseConnectionString (Settings)" DbObjectName="ArtifactManagerDatabase.dbo.__EFMigrationsHistory" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[__EFMigrationsHistory] WHERE (([MigrationId] = @Original_MigrationId) AND ([ProductVersion] = @Original_ProductVersion))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_MigrationId" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="MigrationId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_ProductVersion" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="ProductVersion" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[__EFMigrationsHistory] ([MigrationId], [ProductVersion]) VALUES (@MigrationId, @ProductVersion);
SELECT MigrationId, ProductVersion FROM __EFMigrationsHistory WHERE (MigrationId = @MigrationId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@MigrationId" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="MigrationId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@ProductVersion" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="ProductVersion" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT MigrationId, ProductVersion FROM dbo.[__EFMigrationsHistory]</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[__EFMigrationsHistory] SET [MigrationId] = @MigrationId, [ProductVersion] = @ProductVersion WHERE (([MigrationId] = @Original_MigrationId) AND ([ProductVersion] = @Original_ProductVersion));
SELECT MigrationId, ProductVersion FROM __EFMigrationsHistory WHERE (MigrationId = @MigrationId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@MigrationId" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="MigrationId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@ProductVersion" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="ProductVersion" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_MigrationId" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="MigrationId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_ProductVersion" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="ProductVersion" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="MigrationId" DataSetColumn="MigrationId" />
              <Mapping SourceColumn="ProductVersion" DataSetColumn="ProductVersion" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="CategoriesTableAdapter" GeneratorDataComponentClassName="CategoriesTableAdapter" Name="Categories" UserDataComponentName="CategoriesTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="ArtifactManagerDatabaseConnectionString (Settings)" DbObjectName="ArtifactManagerDatabase.dbo.Categories" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Categories] WHERE (([CategoryName] = @Original_CategoryName) AND ((@IsNull_CreatorName = 1 AND [CreatorName] IS NULL) OR ([CreatorName] = @Original_CreatorName)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_CategoryName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="CategoryName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_CreatorName" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="CreatorName" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_CreatorName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="CreatorName" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Categories] ([CategoryName], [CreatorName]) VALUES (@CategoryName, @CreatorName);
SELECT CategoryName, CreatorName FROM Categories WHERE (CategoryName = @CategoryName)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@CategoryName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="CategoryName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@CreatorName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="CreatorName" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT CategoryName, CreatorName FROM dbo.Categories</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Categories] SET [CategoryName] = @CategoryName, [CreatorName] = @CreatorName WHERE (([CategoryName] = @Original_CategoryName) AND ((@IsNull_CreatorName = 1 AND [CreatorName] IS NULL) OR ([CreatorName] = @Original_CreatorName)));
SELECT CategoryName, CreatorName FROM Categories WHERE (CategoryName = @CategoryName)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@CategoryName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="CategoryName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@CreatorName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="CreatorName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_CategoryName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="CategoryName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_CreatorName" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="CreatorName" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_CreatorName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="CreatorName" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="CategoryName" DataSetColumn="CategoryName" />
              <Mapping SourceColumn="CreatorName" DataSetColumn="CreatorName" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="CategoryPropertiesTableAdapter" GeneratorDataComponentClassName="CategoryPropertiesTableAdapter" Name="CategoryProperties" UserDataComponentName="CategoryPropertiesTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="ArtifactManagerDatabaseConnectionString (Settings)" DbObjectName="ArtifactManagerDatabase.dbo.CategoryProperties" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[CategoryProperties] WHERE (([PropertyName] = @Original_PropertyName) AND ([CategoryName] = @Original_CategoryName))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_PropertyName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="PropertyName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_CategoryName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="CategoryName" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[CategoryProperties] ([PropertyName], [CategoryName]) VALUES (@PropertyName, @CategoryName);
SELECT PropertyName, CategoryName FROM CategoryProperties WHERE (CategoryName = @CategoryName) AND (PropertyName = @PropertyName)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@PropertyName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="PropertyName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@CategoryName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="CategoryName" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT PropertyName, CategoryName FROM dbo.CategoryProperties</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[CategoryProperties] SET [PropertyName] = @PropertyName, [CategoryName] = @CategoryName WHERE (([PropertyName] = @Original_PropertyName) AND ([CategoryName] = @Original_CategoryName));
SELECT PropertyName, CategoryName FROM CategoryProperties WHERE (CategoryName = @CategoryName) AND (PropertyName = @PropertyName)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@PropertyName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="PropertyName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@CategoryName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="CategoryName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_PropertyName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="PropertyName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_CategoryName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="CategoryName" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="PropertyName" DataSetColumn="PropertyName" />
              <Mapping SourceColumn="CategoryName" DataSetColumn="CategoryName" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="InstancePropertiesTableAdapter" GeneratorDataComponentClassName="InstancePropertiesTableAdapter" Name="InstanceProperties" UserDataComponentName="InstancePropertiesTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="ArtifactManagerDatabaseConnectionString (Settings)" DbObjectName="ArtifactManagerDatabase.dbo.InstanceProperties" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[InstanceProperties] WHERE (([PropertyValue] = @Original_PropertyValue) AND ([PropertyName] = @Original_PropertyName) AND ([InstanceName] = @Original_InstanceName))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_PropertyValue" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="PropertyValue" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_PropertyName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="PropertyName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_InstanceName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="InstanceName" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[InstanceProperties] ([PropertyValue], [PropertyName], [InstanceName]) VALUES (@PropertyValue, @PropertyName, @InstanceName);
SELECT PropertyValue, PropertyName, InstanceName FROM InstanceProperties WHERE (InstanceName = @InstanceName) AND (PropertyName = @PropertyName) AND (PropertyValue = @PropertyValue)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@PropertyValue" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="PropertyValue" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@PropertyName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="PropertyName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@InstanceName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="InstanceName" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT PropertyValue, PropertyName, InstanceName FROM dbo.InstanceProperties</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[InstanceProperties] SET [PropertyValue] = @PropertyValue, [PropertyName] = @PropertyName, [InstanceName] = @InstanceName WHERE (([PropertyValue] = @Original_PropertyValue) AND ([PropertyName] = @Original_PropertyName) AND ([InstanceName] = @Original_InstanceName));
SELECT PropertyValue, PropertyName, InstanceName FROM InstanceProperties WHERE (InstanceName = @InstanceName) AND (PropertyName = @PropertyName) AND (PropertyValue = @PropertyValue)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@PropertyValue" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="PropertyValue" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@PropertyName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="PropertyName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@InstanceName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="InstanceName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_PropertyValue" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="PropertyValue" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_PropertyName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="PropertyName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_InstanceName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="InstanceName" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="PropertyValue" DataSetColumn="PropertyValue" />
              <Mapping SourceColumn="PropertyName" DataSetColumn="PropertyName" />
              <Mapping SourceColumn="InstanceName" DataSetColumn="InstanceName" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="InstancesTableAdapter" GeneratorDataComponentClassName="InstancesTableAdapter" Name="Instances" UserDataComponentName="InstancesTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="ArtifactManagerDatabaseConnectionString (Settings)" DbObjectName="ArtifactManagerDatabase.dbo.Instances" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Instances] WHERE (([InstanceName] = @Original_InstanceName) AND ([Overall] = @Original_Overall) AND ([CategoryName] = @Original_CategoryName) AND ((@IsNull_CreatorName = 1 AND [CreatorName] IS NULL) OR ([CreatorName] = @Original_CreatorName)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_InstanceName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="InstanceName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Overall" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Overall" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_CategoryName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="CategoryName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_CreatorName" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="CreatorName" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_CreatorName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="CreatorName" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Instances] ([InstanceName], [Overall], [CategoryName], [CreatorName]) VALUES (@InstanceName, @Overall, @CategoryName, @CreatorName);
SELECT InstanceName, Overall, CategoryName, CreatorName FROM Instances WHERE (InstanceName = @InstanceName)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@InstanceName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="InstanceName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Overall" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Overall" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@CategoryName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="CategoryName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@CreatorName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="CreatorName" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT InstanceName, Overall, CategoryName, CreatorName FROM dbo.Instances</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Instances] SET [InstanceName] = @InstanceName, [Overall] = @Overall, [CategoryName] = @CategoryName, [CreatorName] = @CreatorName WHERE (([InstanceName] = @Original_InstanceName) AND ([Overall] = @Original_Overall) AND ([CategoryName] = @Original_CategoryName) AND ((@IsNull_CreatorName = 1 AND [CreatorName] IS NULL) OR ([CreatorName] = @Original_CreatorName)));
SELECT InstanceName, Overall, CategoryName, CreatorName FROM Instances WHERE (InstanceName = @InstanceName)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@InstanceName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="InstanceName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Overall" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Overall" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@CategoryName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="CategoryName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@CreatorName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="CreatorName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_InstanceName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="InstanceName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Overall" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Overall" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_CategoryName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="CategoryName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_CreatorName" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="CreatorName" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_CreatorName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="CreatorName" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="InstanceName" DataSetColumn="InstanceName" />
              <Mapping SourceColumn="Overall" DataSetColumn="Overall" />
              <Mapping SourceColumn="CategoryName" DataSetColumn="CategoryName" />
              <Mapping SourceColumn="CreatorName" DataSetColumn="CreatorName" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="PermissionsTableAdapter" GeneratorDataComponentClassName="PermissionsTableAdapter" Name="Permissions" UserDataComponentName="PermissionsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="ArtifactManagerDatabaseConnectionString (Settings)" DbObjectName="ArtifactManagerDatabase.dbo.Permissions" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Permissions] WHERE (([PermissionName] = @Original_PermissionName))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_PermissionName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="PermissionName" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Permissions] ([PermissionName], [Description]) VALUES (@PermissionName, @Description);
SELECT PermissionName, Description FROM Permissions WHERE (PermissionName = @PermissionName)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@PermissionName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="PermissionName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Description" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Description" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT PermissionName, Description FROM dbo.Permissions</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Permissions] SET [PermissionName] = @PermissionName, [Description] = @Description WHERE (([PermissionName] = @Original_PermissionName));
SELECT PermissionName, Description FROM Permissions WHERE (PermissionName = @PermissionName)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@PermissionName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="PermissionName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Description" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Description" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_PermissionName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="PermissionName" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="PermissionName" DataSetColumn="PermissionName" />
              <Mapping SourceColumn="Description" DataSetColumn="Description" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="RolePermissionsTableAdapter" GeneratorDataComponentClassName="RolePermissionsTableAdapter" Name="RolePermissions" UserDataComponentName="RolePermissionsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="ArtifactManagerDatabaseConnectionString (Settings)" DbObjectName="ArtifactManagerDatabase.dbo.RolePermissions" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[RolePermissions] WHERE (([RoleName] = @Original_RoleName) AND ([PermissionName] = @Original_PermissionName))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_RoleName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="RoleName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_PermissionName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="PermissionName" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[RolePermissions] ([RoleName], [PermissionName]) VALUES (@RoleName, @PermissionName);
SELECT RoleName, PermissionName FROM RolePermissions WHERE (PermissionName = @PermissionName) AND (RoleName = @RoleName)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@RoleName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="RoleName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@PermissionName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="PermissionName" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT RoleName, PermissionName FROM dbo.RolePermissions</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[RolePermissions] SET [RoleName] = @RoleName, [PermissionName] = @PermissionName WHERE (([RoleName] = @Original_RoleName) AND ([PermissionName] = @Original_PermissionName));
SELECT RoleName, PermissionName FROM RolePermissions WHERE (PermissionName = @PermissionName) AND (RoleName = @RoleName)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@RoleName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="RoleName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@PermissionName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="PermissionName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_RoleName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="RoleName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_PermissionName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="PermissionName" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="RoleName" DataSetColumn="RoleName" />
              <Mapping SourceColumn="PermissionName" DataSetColumn="PermissionName" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="RolesTableAdapter" GeneratorDataComponentClassName="RolesTableAdapter" Name="Roles" UserDataComponentName="RolesTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="ArtifactManagerDatabaseConnectionString (Settings)" DbObjectName="ArtifactManagerDatabase.dbo.Roles" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Roles] WHERE (([RoleName] = @Original_RoleName))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_RoleName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="RoleName" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Roles] ([RoleName]) VALUES (@RoleName);
SELECT RoleName FROM Roles WHERE (RoleName = @RoleName)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@RoleName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="RoleName" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT RoleName FROM dbo.Roles</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Roles] SET [RoleName] = @RoleName WHERE (([RoleName] = @Original_RoleName));
SELECT RoleName FROM Roles WHERE (RoleName = @RoleName)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@RoleName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="RoleName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_RoleName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="RoleName" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="RoleName" DataSetColumn="RoleName" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="UsersTableAdapter" GeneratorDataComponentClassName="UsersTableAdapter" Name="Users" UserDataComponentName="UsersTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="ArtifactManagerDatabaseConnectionString (Settings)" DbObjectName="ArtifactManagerDatabase.dbo.Users" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Users] WHERE (([UserName] = @Original_UserName) AND ([RoleName] = @Original_RoleName))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_UserName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="UserName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_RoleName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="RoleName" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Users] ([UserName], [Password], [RoleName]) VALUES (@UserName, @Password, @RoleName);
SELECT UserName, Password, RoleName FROM Users WHERE (UserName = @UserName)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@UserName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="UserName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Password" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Password" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@RoleName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="RoleName" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT UserName, Password, RoleName FROM dbo.Users</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Users] SET [UserName] = @UserName, [Password] = @Password, [RoleName] = @RoleName WHERE (([UserName] = @Original_UserName) AND ([RoleName] = @Original_RoleName));
SELECT UserName, Password, RoleName FROM Users WHERE (UserName = @UserName)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@UserName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="UserName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Password" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Password" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@RoleName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="RoleName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_UserName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="UserName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_RoleName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="RoleName" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="UserName" DataSetColumn="UserName" />
              <Mapping SourceColumn="Password" DataSetColumn="Password" />
              <Mapping SourceColumn="RoleName" DataSetColumn="RoleName" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="ArtifactManagerDatabaseDataSet" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_UserDSName="ArtifactManagerDatabaseDataSet" msprop:Generator_DataSetName="ArtifactManagerDatabaseDataSet">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="__EFMigrationsHistory" msprop:Generator_RowEvHandlerName="__EFMigrationsHistoryRowChangeEventHandler" msprop:Generator_RowDeletedName="__EFMigrationsHistoryRowDeleted" msprop:Generator_RowDeletingName="__EFMigrationsHistoryRowDeleting" msprop:Generator_RowEvArgName="__EFMigrationsHistoryRowChangeEvent" msprop:Generator_TablePropName="__EFMigrationsHistory" msprop:Generator_RowChangedName="__EFMigrationsHistoryRowChanged" msprop:Generator_RowChangingName="__EFMigrationsHistoryRowChanging" msprop:Generator_TableClassName="__EFMigrationsHistoryDataTable" msprop:Generator_RowClassName="__EFMigrationsHistoryRow" msprop:Generator_TableVarName="table__EFMigrationsHistory" msprop:Generator_UserTableName="__EFMigrationsHistory">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="MigrationId" msprop:Generator_ColumnPropNameInRow="MigrationId" msprop:Generator_ColumnPropNameInTable="MigrationIdColumn" msprop:Generator_ColumnVarNameInTable="columnMigrationId" msprop:Generator_UserColumnName="MigrationId">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="150" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="ProductVersion" msprop:Generator_ColumnPropNameInRow="ProductVersion" msprop:Generator_ColumnPropNameInTable="ProductVersionColumn" msprop:Generator_ColumnVarNameInTable="columnProductVersion" msprop:Generator_UserColumnName="ProductVersion">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="32" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Categories" msprop:Generator_RowEvHandlerName="CategoriesRowChangeEventHandler" msprop:Generator_RowDeletedName="CategoriesRowDeleted" msprop:Generator_RowDeletingName="CategoriesRowDeleting" msprop:Generator_RowEvArgName="CategoriesRowChangeEvent" msprop:Generator_TablePropName="Categories" msprop:Generator_RowChangedName="CategoriesRowChanged" msprop:Generator_RowChangingName="CategoriesRowChanging" msprop:Generator_TableClassName="CategoriesDataTable" msprop:Generator_RowClassName="CategoriesRow" msprop:Generator_TableVarName="tableCategories" msprop:Generator_UserTableName="Categories">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="CategoryName" msprop:Generator_ColumnPropNameInRow="CategoryName" msprop:Generator_ColumnPropNameInTable="CategoryNameColumn" msprop:Generator_ColumnVarNameInTable="columnCategoryName" msprop:Generator_UserColumnName="CategoryName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="450" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="CreatorName" msprop:Generator_ColumnPropNameInRow="CreatorName" msprop:Generator_ColumnPropNameInTable="CreatorNameColumn" msprop:Generator_ColumnVarNameInTable="columnCreatorName" msprop:Generator_UserColumnName="CreatorName" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="450" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="CategoryProperties" msprop:Generator_RowEvHandlerName="CategoryPropertiesRowChangeEventHandler" msprop:Generator_RowDeletedName="CategoryPropertiesRowDeleted" msprop:Generator_RowDeletingName="CategoryPropertiesRowDeleting" msprop:Generator_RowEvArgName="CategoryPropertiesRowChangeEvent" msprop:Generator_TablePropName="CategoryProperties" msprop:Generator_RowChangedName="CategoryPropertiesRowChanged" msprop:Generator_RowChangingName="CategoryPropertiesRowChanging" msprop:Generator_TableClassName="CategoryPropertiesDataTable" msprop:Generator_RowClassName="CategoryPropertiesRow" msprop:Generator_TableVarName="tableCategoryProperties" msprop:Generator_UserTableName="CategoryProperties">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="PropertyName" msprop:Generator_ColumnPropNameInRow="PropertyName" msprop:Generator_ColumnPropNameInTable="PropertyNameColumn" msprop:Generator_ColumnVarNameInTable="columnPropertyName" msprop:Generator_UserColumnName="PropertyName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="450" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="CategoryName" msprop:Generator_ColumnPropNameInRow="CategoryName" msprop:Generator_ColumnPropNameInTable="CategoryNameColumn" msprop:Generator_ColumnVarNameInTable="columnCategoryName" msprop:Generator_UserColumnName="CategoryName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="450" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="InstanceProperties" msprop:Generator_RowEvHandlerName="InstancePropertiesRowChangeEventHandler" msprop:Generator_RowDeletedName="InstancePropertiesRowDeleted" msprop:Generator_RowDeletingName="InstancePropertiesRowDeleting" msprop:Generator_RowEvArgName="InstancePropertiesRowChangeEvent" msprop:Generator_TablePropName="InstanceProperties" msprop:Generator_RowChangedName="InstancePropertiesRowChanged" msprop:Generator_RowChangingName="InstancePropertiesRowChanging" msprop:Generator_TableClassName="InstancePropertiesDataTable" msprop:Generator_RowClassName="InstancePropertiesRow" msprop:Generator_TableVarName="tableInstanceProperties" msprop:Generator_UserTableName="InstanceProperties">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="PropertyValue" msprop:Generator_ColumnPropNameInRow="PropertyValue" msprop:Generator_ColumnPropNameInTable="PropertyValueColumn" msprop:Generator_ColumnVarNameInTable="columnPropertyValue" msprop:Generator_UserColumnName="PropertyValue">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="450" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="PropertyName" msprop:Generator_ColumnPropNameInRow="PropertyName" msprop:Generator_ColumnPropNameInTable="PropertyNameColumn" msprop:Generator_ColumnVarNameInTable="columnPropertyName" msprop:Generator_UserColumnName="PropertyName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="450" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="InstanceName" msprop:Generator_ColumnPropNameInRow="InstanceName" msprop:Generator_ColumnPropNameInTable="InstanceNameColumn" msprop:Generator_ColumnVarNameInTable="columnInstanceName" msprop:Generator_UserColumnName="InstanceName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="450" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Instances" msprop:Generator_RowEvHandlerName="InstancesRowChangeEventHandler" msprop:Generator_RowDeletedName="InstancesRowDeleted" msprop:Generator_RowDeletingName="InstancesRowDeleting" msprop:Generator_RowEvArgName="InstancesRowChangeEvent" msprop:Generator_TablePropName="Instances" msprop:Generator_RowChangedName="InstancesRowChanged" msprop:Generator_RowChangingName="InstancesRowChanging" msprop:Generator_TableClassName="InstancesDataTable" msprop:Generator_RowClassName="InstancesRow" msprop:Generator_TableVarName="tableInstances" msprop:Generator_UserTableName="Instances">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="InstanceName" msprop:Generator_ColumnPropNameInRow="InstanceName" msprop:Generator_ColumnPropNameInTable="InstanceNameColumn" msprop:Generator_ColumnVarNameInTable="columnInstanceName" msprop:Generator_UserColumnName="InstanceName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="450" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Overall" msprop:Generator_ColumnPropNameInRow="Overall" msprop:Generator_ColumnPropNameInTable="OverallColumn" msprop:Generator_ColumnVarNameInTable="columnOverall" msprop:Generator_UserColumnName="Overall" type="xs:int" />
              <xs:element name="CategoryName" msprop:Generator_ColumnPropNameInRow="CategoryName" msprop:Generator_ColumnPropNameInTable="CategoryNameColumn" msprop:Generator_ColumnVarNameInTable="columnCategoryName" msprop:Generator_UserColumnName="CategoryName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="450" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="CreatorName" msprop:Generator_ColumnPropNameInRow="CreatorName" msprop:Generator_ColumnPropNameInTable="CreatorNameColumn" msprop:Generator_ColumnVarNameInTable="columnCreatorName" msprop:Generator_UserColumnName="CreatorName" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="450" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Permissions" msprop:Generator_RowEvHandlerName="PermissionsRowChangeEventHandler" msprop:Generator_RowDeletedName="PermissionsRowDeleted" msprop:Generator_RowDeletingName="PermissionsRowDeleting" msprop:Generator_RowEvArgName="PermissionsRowChangeEvent" msprop:Generator_TablePropName="Permissions" msprop:Generator_RowChangedName="PermissionsRowChanged" msprop:Generator_RowChangingName="PermissionsRowChanging" msprop:Generator_TableClassName="PermissionsDataTable" msprop:Generator_RowClassName="PermissionsRow" msprop:Generator_TableVarName="tablePermissions" msprop:Generator_UserTableName="Permissions">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="PermissionName" msprop:Generator_ColumnPropNameInRow="PermissionName" msprop:Generator_ColumnPropNameInTable="PermissionNameColumn" msprop:Generator_ColumnVarNameInTable="columnPermissionName" msprop:Generator_UserColumnName="PermissionName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="450" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Description" msprop:Generator_ColumnPropNameInRow="Description" msprop:Generator_ColumnPropNameInTable="DescriptionColumn" msprop:Generator_ColumnVarNameInTable="columnDescription" msprop:Generator_UserColumnName="Description">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2147483647" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="RolePermissions" msprop:Generator_RowEvHandlerName="RolePermissionsRowChangeEventHandler" msprop:Generator_RowDeletedName="RolePermissionsRowDeleted" msprop:Generator_RowDeletingName="RolePermissionsRowDeleting" msprop:Generator_RowEvArgName="RolePermissionsRowChangeEvent" msprop:Generator_TablePropName="RolePermissions" msprop:Generator_RowChangedName="RolePermissionsRowChanged" msprop:Generator_RowChangingName="RolePermissionsRowChanging" msprop:Generator_TableClassName="RolePermissionsDataTable" msprop:Generator_RowClassName="RolePermissionsRow" msprop:Generator_TableVarName="tableRolePermissions" msprop:Generator_UserTableName="RolePermissions">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="RoleName" msprop:Generator_ColumnPropNameInRow="RoleName" msprop:Generator_ColumnPropNameInTable="RoleNameColumn" msprop:Generator_ColumnVarNameInTable="columnRoleName" msprop:Generator_UserColumnName="RoleName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="450" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="PermissionName" msprop:Generator_ColumnPropNameInRow="PermissionName" msprop:Generator_ColumnPropNameInTable="PermissionNameColumn" msprop:Generator_ColumnVarNameInTable="columnPermissionName" msprop:Generator_UserColumnName="PermissionName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="450" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Roles" msprop:Generator_RowEvHandlerName="RolesRowChangeEventHandler" msprop:Generator_RowDeletedName="RolesRowDeleted" msprop:Generator_RowDeletingName="RolesRowDeleting" msprop:Generator_RowEvArgName="RolesRowChangeEvent" msprop:Generator_TablePropName="Roles" msprop:Generator_RowChangedName="RolesRowChanged" msprop:Generator_RowChangingName="RolesRowChanging" msprop:Generator_TableClassName="RolesDataTable" msprop:Generator_RowClassName="RolesRow" msprop:Generator_TableVarName="tableRoles" msprop:Generator_UserTableName="Roles">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="RoleName" msprop:Generator_ColumnPropNameInRow="RoleName" msprop:Generator_ColumnPropNameInTable="RoleNameColumn" msprop:Generator_ColumnVarNameInTable="columnRoleName" msprop:Generator_UserColumnName="RoleName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="450" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Users" msprop:Generator_RowEvHandlerName="UsersRowChangeEventHandler" msprop:Generator_RowDeletedName="UsersRowDeleted" msprop:Generator_RowDeletingName="UsersRowDeleting" msprop:Generator_RowEvArgName="UsersRowChangeEvent" msprop:Generator_TablePropName="Users" msprop:Generator_RowChangedName="UsersRowChanged" msprop:Generator_RowChangingName="UsersRowChanging" msprop:Generator_TableClassName="UsersDataTable" msprop:Generator_RowClassName="UsersRow" msprop:Generator_TableVarName="tableUsers" msprop:Generator_UserTableName="Users">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="UserName" msprop:Generator_ColumnPropNameInRow="UserName" msprop:Generator_ColumnPropNameInTable="UserNameColumn" msprop:Generator_ColumnVarNameInTable="columnUserName" msprop:Generator_UserColumnName="UserName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="450" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Password" msprop:Generator_ColumnPropNameInRow="Password" msprop:Generator_ColumnPropNameInTable="PasswordColumn" msprop:Generator_ColumnVarNameInTable="columnPassword" msprop:Generator_UserColumnName="Password">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2147483647" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="RoleName" msprop:Generator_ColumnPropNameInRow="RoleName" msprop:Generator_ColumnPropNameInTable="RoleNameColumn" msprop:Generator_ColumnVarNameInTable="columnRoleName" msprop:Generator_UserColumnName="RoleName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="450" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:__EFMigrationsHistory" />
      <xs:field xpath="mstns:MigrationId" />
    </xs:unique>
    <xs:unique name="Categories_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Categories" />
      <xs:field xpath="mstns:CategoryName" />
    </xs:unique>
    <xs:unique name="CategoryProperties_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:CategoryProperties" />
      <xs:field xpath="mstns:PropertyName" />
      <xs:field xpath="mstns:CategoryName" />
    </xs:unique>
    <xs:unique name="InstanceProperties_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:InstanceProperties" />
      <xs:field xpath="mstns:PropertyValue" />
      <xs:field xpath="mstns:PropertyName" />
      <xs:field xpath="mstns:InstanceName" />
    </xs:unique>
    <xs:unique name="Instances_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Instances" />
      <xs:field xpath="mstns:InstanceName" />
    </xs:unique>
    <xs:unique name="Permissions_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Permissions" />
      <xs:field xpath="mstns:PermissionName" />
    </xs:unique>
    <xs:unique name="RolePermissions_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:RolePermissions" />
      <xs:field xpath="mstns:RoleName" />
      <xs:field xpath="mstns:PermissionName" />
    </xs:unique>
    <xs:unique name="Roles_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Roles" />
      <xs:field xpath="mstns:RoleName" />
    </xs:unique>
    <xs:unique name="Users_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Users" />
      <xs:field xpath="mstns:UserName" />
    </xs:unique>
  </xs:element>
  <xs:annotation>
    <xs:appinfo>
      <msdata:Relationship name="FK_Categories_Users_CreatorName" msdata:parent="Users" msdata:child="Categories" msdata:parentkey="UserName" msdata:childkey="CreatorName" msprop:Generator_UserParentTable="Users" msprop:Generator_UserChildTable="Categories" msprop:Generator_RelationVarName="relationFK_Categories_Users_CreatorName" msprop:Generator_UserRelationName="FK_Categories_Users_CreatorName" msprop:Generator_ChildPropName="GetCategoriesRows" msprop:Generator_ParentPropName="UsersRow" />
      <msdata:Relationship name="FK_CategoryProperties_Categories_CategoryName" msdata:parent="Categories" msdata:child="CategoryProperties" msdata:parentkey="CategoryName" msdata:childkey="CategoryName" msprop:Generator_UserParentTable="Categories" msprop:Generator_UserChildTable="CategoryProperties" msprop:Generator_RelationVarName="relationFK_CategoryProperties_Categories_CategoryName" msprop:Generator_ChildPropName="GetCategoryPropertiesRows" msprop:Generator_ParentPropName="CategoriesRow" msprop:Generator_UserRelationName="FK_CategoryProperties_Categories_CategoryName" />
      <msdata:Relationship name="FK_InstanceProperties_Instances_InstanceName" msdata:parent="Instances" msdata:child="InstanceProperties" msdata:parentkey="InstanceName" msdata:childkey="InstanceName" msprop:Generator_UserParentTable="Instances" msprop:Generator_UserChildTable="InstanceProperties" msprop:Generator_RelationVarName="relationFK_InstanceProperties_Instances_InstanceName" msprop:Generator_UserRelationName="FK_InstanceProperties_Instances_InstanceName" msprop:Generator_ChildPropName="GetInstancePropertiesRows" msprop:Generator_ParentPropName="InstancesRow" />
      <msdata:Relationship name="FK_Instances_Categories_CategoryName" msdata:parent="Categories" msdata:child="Instances" msdata:parentkey="CategoryName" msdata:childkey="CategoryName" msprop:Generator_UserParentTable="Categories" msprop:Generator_UserChildTable="Instances" msprop:Generator_RelationVarName="relationFK_Instances_Categories_CategoryName" msprop:Generator_ChildPropName="GetInstancesRows" msprop:Generator_ParentPropName="CategoriesRow" msprop:Generator_UserRelationName="FK_Instances_Categories_CategoryName" />
      <msdata:Relationship name="FK_Instances_Users_CreatorName" msdata:parent="Users" msdata:child="Instances" msdata:parentkey="UserName" msdata:childkey="CreatorName" msprop:Generator_UserParentTable="Users" msprop:Generator_UserChildTable="Instances" msprop:Generator_RelationVarName="relationFK_Instances_Users_CreatorName" msprop:Generator_UserRelationName="FK_Instances_Users_CreatorName" msprop:Generator_ChildPropName="GetInstancesRows" msprop:Generator_ParentPropName="UsersRow" />
      <msdata:Relationship name="FK_RolePermissions_Permissions_PermissionName" msdata:parent="Permissions" msdata:child="RolePermissions" msdata:parentkey="PermissionName" msdata:childkey="PermissionName" msprop:Generator_UserParentTable="Permissions" msprop:Generator_UserChildTable="RolePermissions" msprop:Generator_RelationVarName="relationFK_RolePermissions_Permissions_PermissionName" msprop:Generator_ChildPropName="GetRolePermissionsRows" msprop:Generator_ParentPropName="PermissionsRow" msprop:Generator_UserRelationName="FK_RolePermissions_Permissions_PermissionName" />
      <msdata:Relationship name="FK_RolePermissions_Roles_RoleName" msdata:parent="Roles" msdata:child="RolePermissions" msdata:parentkey="RoleName" msdata:childkey="RoleName" msprop:Generator_UserParentTable="Roles" msprop:Generator_UserChildTable="RolePermissions" msprop:Generator_RelationVarName="relationFK_RolePermissions_Roles_RoleName" msprop:Generator_UserRelationName="FK_RolePermissions_Roles_RoleName" msprop:Generator_ChildPropName="GetRolePermissionsRows" msprop:Generator_ParentPropName="RolesRow" />
      <msdata:Relationship name="FK_Users_Roles_RoleName" msdata:parent="Roles" msdata:child="Users" msdata:parentkey="RoleName" msdata:childkey="RoleName" msprop:Generator_UserParentTable="Roles" msprop:Generator_UserChildTable="Users" msprop:Generator_RelationVarName="relationFK_Users_Roles_RoleName" msprop:Generator_ChildPropName="GetUsersRows" msprop:Generator_ParentPropName="RolesRow" msprop:Generator_UserRelationName="FK_Users_Roles_RoleName" />
    </xs:appinfo>
  </xs:annotation>
</xs:schema>